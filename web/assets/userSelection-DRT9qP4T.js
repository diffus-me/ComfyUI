var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});import{bF as api,bL as $el}from"./index-p8Rbtzda.js";function createSpinner(){const div=document.createElement("div");return div.innerHTML='<div class="lds-ring"><div></div><div></div><div></div><div></div></div>',div.firstElementChild}__name(createSpinner,"createSpinner");window.comfyAPI=window.comfyAPI||{};window.comfyAPI.spinner=window.comfyAPI.spinner||{};window.comfyAPI.spinner.createSpinner=createSpinner;class UserSelectionScreen{static{__name(this,"UserSelectionScreen")}async show(users,user){const userSelection=document.getElementById("comfy-user-selection");return userSelection.style.display="",new Promise(resolve=>{const input=userSelection.getElementsByTagName("input")[0],select=userSelection.getElementsByTagName("select")[0],inputSection=input.closest("section"),selectSection=select.closest("section"),form=userSelection.getElementsByTagName("form")[0],error=userSelection.getElementsByClassName("comfy-user-error")[0],button=userSelection.getElementsByClassName("comfy-user-button-next")[0];let inputActive=null;if(input.addEventListener("focus",()=>{inputSection.classList.add("selected"),selectSection.classList.remove("selected"),inputActive=!0}),select.addEventListener("focus",()=>{inputSection.classList.remove("selected"),selectSection.classList.add("selected"),inputActive=!1,select.style.color=""}),select.addEventListener("blur",()=>{select.value||(select.style.color="var(--descrip-text)")}),form.addEventListener("submit",async e=>{if(e.preventDefault(),inputActive==null)error.textContent="Please enter a username or select an existing user.";else if(inputActive){const username=input.value.trim();if(!username){error.textContent="Please enter a username.";return}input.disabled=select.disabled=input.readonly=select.readonly=!0;const spinner=createSpinner();button.prepend(spinner);try{const resp=await api.createUser(username);if(resp.status>=300){let message="Error creating user: "+resp.status+" "+resp.statusText;try{const res=await resp.json();res.error&&(message=res.error)}catch{}throw new Error(message)}resolve({username,userId:await resp.json(),created:!0})}catch(err){spinner.remove(),error.textContent=err.message??err.statusText??err??"An unknown error occurred.",input.disabled=select.disabled=input.readonly=select.readonly=!1;return}}else if(select.value)resolve({username:users[select.value],userId:select.value,created:!1});else{error.textContent="Please select an existing user.";return}}),user){const name=localStorage["Comfy.userName"];name&&(input.value=name)}input.value&&input.focus();const userIds=Object.keys(users??{});if(userIds.length){for(const u of userIds)$el("option",{textContent:users[u],value:u,parent:select});select.style.color="var(--descrip-text)",select.value&&select.focus()}else userSelection.classList.add("no-users"),input.focus()}).then(r=>(userSelection.remove(),r))}}window.comfyAPI=window.comfyAPI||{};window.comfyAPI.userSelection=window.comfyAPI.userSelection||{};window.comfyAPI.userSelection.UserSelectionScreen=UserSelectionScreen;export{UserSelectionScreen};
//# sourceMappingURL=userSelection-DRT9qP4T.js.map
